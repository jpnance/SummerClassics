mixin title(title)
	if title
		title #{title} &laquo; Summer Classics &laquo; Coinflipper
	else
		title Summer Classics &laquo; Coinflipper

mixin teamButton(session, game, side)
	-
		var button = { classes: [], actionLink: null };

		if (!side.team.classic || side.team.classic.isFinal() || game.hasStarted()) {
			button.classes.push('disabled');
			button.actionLink = '#';
		}

		if (side.picked) {
			button.actionLink = '/unpick/' + side.team._id + '/' + game._id;
			button.classes.push('btn-secondary');
		}
		else {
			button.actionLink = '/pick/' + side.team._id + '/' + game._id;
			button.classes.push('btn-outline-secondary');
		}

	a.team-button2.text-center.btn(href=button.actionLink class=button.classes data-team-id=side.team._id)
		| #{side.team.abbreviation}
		if session
			br
			span.record
				+record(side.team.classic)

mixin pitcher(pitcher)
	if pitcher
		| #{pitcher.name}
	else
		| TBD

mixin record(classic)
	if classic
		| (#{classic.record.wins}-#{classic.record.losses})
	else
		| (0-0)

mixin gameCard(game)
	-
		var classes = {
			header: { background: [], linkText: [] },
			away: { background: [], linkText: [], pitcherText: ['text-muted'], scoreText: [], picksText: [] },
			home: { background: [], linkText: [], pitcherText: ['text-muted'], scoreText: [], picksText: [] }
		}

		if (game.isDelayed()) {
			classes.header.background.push('bg-warning');
			classes.header.linkText.push('text-dark');
		}

		if (!game.isActuallyHappening()) {
			if (game.classic) {
				if (game.classic.team._id == game.away.team._id) {
					classes.away.background.push('bg-light-gray');
				}
				else if (game.classic.team._id == game.home.team._id) {
					classes.home.background.push('bg-light-gray');
				}
			}
		}

		if (game.isActuallyHappening() && !game.isFinal()) {
			classes.header.background.push('bg-primary');
			classes.header.linkText.push('text-white');
			classes.away.picksText.push('text-dark');
			classes.home.picksText.push('text-dark');

			if (game.classic) {
				if (game.classic.team._id == game.away.team._id) {
					classes.away.background.push('bg-light-gray');
				}
				else if (game.classic.team._id == game.home.team._id) {
					classes.home.background.push('bg-light-gray');
				}
			}
		}

		if (game.isFinal()) {
			if (game.classic) {
				if (game.classic.team._id == game.away.team._id) {
					classes.away.linkText.push('text-white');
					classes.away.pitcherText = ['text-light'];
					classes.away.scoreText.push('text-white');
					classes.away.picksText.push('text-white');

					if (game.away.winner) {
						classes.home.picksText.push('text-danger');
						classes.away.background.push('bg-success');
					}
					else if (game.home.winner) {
						classes.home.picksText.push('text-success');
						classes.away.background.push('bg-danger');
					}
					else {
						classes.away.background.push('bg-light-gray');
					}
				}
				else if (game.classic.team._id == game.home.team._id) {
					classes.home.linkText.push('text-white');
					classes.home.pitcherText = ['text-light'];
					classes.home.scoreText.push('text-white');
					classes.home.picksText.push('text-white');

					if (game.home.winner) {
						classes.away.picksText.push('text-danger');
						classes.home.background.push('bg-success');
					}
					else if (game.away.winner) {
						classes.away.picksText.push('text-success');
						classes.home.background.push('bg-danger');
					}
					else {
						classes.home.background.push('bg-light-gray');
					}
				}
			}
			else {
				if (game.away.winner) {
					classes.away.picksText.push('text-success');
					classes.home.picksText.push('text-danger');
				}
				else if (game.home.winner) {
					classes.home.picksText.push('text-success');
					classes.away.picksText.push('text-danger');
				}
			}
		}

	div.col-xs-12.col-sm-6.col-md-6.col-lg-4.mb-4(id='game-' + game._id)
		div.card
			div.card-header.py-1(class=classes.header.background)
				div.row.justify-content-center
					div.col-10.col-sm-12.col-md-12.text-center
						a(href='https://www.mlb.com/gameday/' + game._id class=classes.header.linkText)
							if game.isDelayed()
								| Delayed
							else if !game.hasStarted()
								| #{dateFormat(game.startTime, 'h:MMtt')} ET
							else if game.isOver()
								| Final
								if game.inning.number != 9
									|
									| (#{game.inning.number})
							else if game.isActuallyHappening()
								| #{game.inning.state} of the #{game.inning.ordinal}
							else
								| Live

			ul.list-group.list-group-flush
				+teamRow(game, 'away', classes.away)
				+teamRow(game, 'home', classes.home)

			if session && !game.hasStarted()
				div.card-footer.text-center
					div.btn-group
						+teamButton(session, game, game.away)
						+teamButton(session, game, game.home)

mixin teamRow(game, side, classes)
	li.team-row.list-group-item.py-1(id='team-row-' + game[side].team._id class=classes.background)
		div.row
			div.col-6.offset-2.col-sm-8.offset-sm-1.col-md-8.p-0
					h5.mb-0.text-nowrap
						a.font-weight-bold(href='/schedule/' + game[side].team.abbreviation class=classes.linkText) #{game[side].team.teamName}
					div.pitcher.mb-0.text-nowrap
						a(href='http://m.mlb.com/player/' + game[side].probablePitcher._id class=classes.pitcherText target='_blank')
							+pitcher(game[side].probablePitcher)
			h2.col-2.text-center.font-weight-normal.p-0.mb-0(class=classes.scoreText)
				if game.isActuallyHappening()
					| #{game[side].score}
		div.row
			if game.isActuallyHappening() && game[side].picks && game[side].picks.length > 0
				div.picks.col-6.offset-2.col-sm-8.offset-sm-1.p-0.mb-1.mt-2(class=classes.picksText)
					each pick in game[side].picks
						a(href='/picks/' + pick.user.username class=classes.picksText)
							| #{pick.user.displayName}
						|
						|
						span.record
							+record(pick)
						if pick != game[side].picks[game[side].picks.length - 1]
							| ,
							|

mixin teamButtons(session, game, team, pitcher)
	-
		var buttons = [
			{
				actionLink: '/pick/' + team._id + '/' + game._id,
				buttonClass: ['btn-outline-secondary', 'pick']
			},
			{
				actionLink: '/unpick/' + team._id + '/' + game._id,
				buttonClass: ['btn-primary', 'unpick']
			}
		];

	each button in buttons
		-
			if (!team.classic || team.classic.isFinal() || game.hasStarted()) {
				button.buttonClass.push('disabled');
			}

		a.team-button.text-left.btn.btn-block.col-xs-12.m-0(href=button.actionLink class=button.buttonClass)
			| #{team.teamName}
			if session
				|
				|
				span.record
					+record(team.classic)
			br
			span.pitcher
				+pitcher(pitcher)

mixin scheduleNav(yesterday, today, tomorrow)
	ul.nav.justify-content-center
		if dateFormat(yesterday, 'yyyy-mm-dd') >= '2018-03-29'
			li.nav-item
				a.nav-link(href='/schedule/' + dateFormat(yesterday, 'yyyy-mm-dd'))
					span.d-none.d-sm-inline #{dateFormat(yesterday, 'mmmm dS')}
					span.d-sm-none #{dateFormat(yesterday, 'm/d')}
		li.nav-item
			a.nav-link.disabled(href='/schedule/' + dateFormat(today, 'yyyy-mm-dd'))
				span.d-none.d-sm-inline #{dateFormat(today, 'mmmm dS')}
				span.d-sm-none #{dateFormat(today, 'm/d')}
		if dateFormat(tomorrow, 'yyyy-mm-dd') <= '2018-09-30'
			li.nav-item
				a.nav-link(href='/schedule/' + dateFormat(tomorrow, 'yyyy-mm-dd'))
					span.d-none.d-sm-inline #{dateFormat(tomorrow, 'mmmm dS')}
					span.d-sm-none #{dateFormat(tomorrow, 'm/d')}
